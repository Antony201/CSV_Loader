basePath: /
definitions:
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  test_task.Transaction:
    properties:
      amountOriginal:
        type: integer
      amountTotal:
        type: integer
      commissionClient:
        type: number
      commissionPS:
        type: number
      commissionProvider:
        type: number
      dateInput:
        type: string
      datePost:
        type: string
      partnerObjectid:
        type: integer
      payeeBankAccount:
        type: string
      payeeBankMfo:
        type: integer
      payeeName:
        type: string
      payeeid:
        type: integer
      paymentNarrative:
        type: string
      paymentNumber:
        type: string
      paymentType:
        type: string
      requestid:
        type: integer
      service:
        type: string
      serviceid:
        type: integer
      status:
        type: string
      terminalid:
        type: integer
      transactionid:
        type: integer
    type: object
host: docker_host:8000
info:
  contact: {}
  description: API server for CSV Application
  title: CSVLoader App API
  version: "1.0"
paths:
  /api/v1/transactions/:
    get:
      consumes:
      - multipart/form-data
      description: Filter Transactions by some parameter.
      operationId: getTransactions
      parameters:
      - description: Search transaction by transaction_id
        in: query
        name: transaction_id
        type: integer
      - description: Search transactions by terminal_id (you can use it multiple)
        in: query
        name: terminal_id
        type: integer
      - description: Search transactions by status
        in: query
        name: status
        type: string
      - description: Search transactions by payment_type
        in: query
        name: payment_type
        type: string
      - description: Search transactions by period (from date to date), use only with
          to
        in: query
        name: from
        type: string
      - description: Search transactions by period (from date to date) use only with
          from
        in: query
        name: to
        type: string
      - description: Search transactions by payment_narrative
        in: query
        name: payment_narrative
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/test_task.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get transactions by filter
      tags:
      - Transactions
  /api/v1/transactions/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload Transactions file to save to db.
      operationId: uploadTransactions
      parameters:
      - description: The transaction file with extension .csv
        in: formData
        name: transactions_file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Upload Transactions
      tags:
      - Transactions
swagger: "2.0"
